/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Launcher {
            bindings = <&kp LG(SPACE)>;
            key-positions = <16 14>;
        };

        OpenApps {
            bindings = <&kp LC(SPACE)>;
            key-positions = <19 21>;
        };

        WebTabs {
            bindings = <&kp LA(SPACE)>;
            key-positions = <19 20>;
        };

        WebHist {
            bindings = <&kp LA(LC(SPACE))>;
            key-positions = <16 15>;
        };

        Colon {
            bindings = <&kp COLON>;
            key-positions = <16 17>;
        };

        DelPrevWord {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <18 19>;
        };

        PrevWord {
            bindings = <&kp LA(LEFT_ARROW)>;
            key-positions = <31 32>;
        };

        NextWord {
            bindings = <&kp LA(RIGHT_ARROW)>;
            key-positions = <32 33>;
        };
    };

    behaviors {
        bhm: balanced_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "Balance Homerow Mod";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
        };

        caps_word: caps_word {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS_WORD";
            #binding-cells = <0>;
            continue-list = <A B C D E F G H I J K L O P M Q N T S U V R W Y X Z NUMBER_1 N1 NUMBER_2 N2 NUMBER_3 N3 NUMBER_4 N4 NUMBER_5 N5 NUMBER_6 N6 NUMBER_7 N7 NUMBER_8 N8 NUMBER_9 N9 NUMBER_0 N0 BACKSPACE BSPC MINUS UNDERSCORE UNDER DELETE DEL>;
        };
    };

    macros {
        v_split: v_split {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp MINUS>;
            label = "V_SPLIT";
        };

        h_split: h_split {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp PIPE>;
            label = "H_SPLIT";
        };

        get_qoute: get_qoute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(M)) &kp LG(V)>;
            label = "GET_QOUTE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Mac {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE   &kp Q             &kp W                &kp E            &kp R              &bhm LG(T) T    &kp Y         &bhm LC(LS(NUMBER_7)) U  &bhm LS(LC(NUMBER_8)) I  &bhm LC(LS(NUMBER_9)) O  &kp P                      &kp BACKSLASH
&caps_word  &bhm LEFT_META A  &bhm LEFT_CONTROL S  &bhm LEFT_ALT D  &bhm LEFT_SHIFT F  &kp G           &kp H         &bhm RIGHT_SHIFT J       &bhm RIGHT_ALT K         &bhm RIGHT_CONTROL L     &bhm RIGHT_META SEMICOLON  &kp SQT
&tog 1      &bhm LG(Z) Z      &bhm LG(X) X         &bhm LG(C) C     &bhm LG(V) V       &kp B           &bhm LG(N) N  &kp M                    &kp COMMA                &kp DOT                  &kp SLASH                  &tog 3
                                                   &lt 5 SPACE      &lt 2 SPACE        &lt 3 TAB       &lt 3 ENTER   &lt 4 ESCAPE             &kp LC(LG(Q))
            >;

            label = "Mac";
        };

        gallium {
            bindings = <
&trans  &kp B         &kp L         &kp D             &bhm LG(C) C       &bhm LG(V) V       &kp K             &kp Y               &kp O              &kp U         &kp SEMI  &kp BSLH
&trans  &kp N         &bhm LCTRL R  &bhm LEFT_META T  &bhm LEFT_SHIFT S  &bhm LEFT_ALT G    &bhm RIGHT_ALT P  &bhm RIGHT_SHIFT H  &bhm RIGHT_META A  &bhm RCTRL E  &kp I     &kp APOS
&trans  &bhm LG(X) X  &kp Q         &kp M             &kp W              &bhm LG(Z) Z       &kp J             &kp F               &kp COMMA          &kp DOT       &kp FSLH  &trans
                                    &trans            &trans             &trans             &trans            &trans              &trans
            >;
        };

        Arrows {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans     &trans     &kp LA(E)      &kp LA(R)   &trans      &trans             &trans              &trans          &trans               &trans  &trans
&trans  &kp LG(A)  &kp LG(S)  &kp BACKSPACE  &kp DELETE  &v_split    &mt LG(LEFT) LEFT  &mt PAGE_DOWN DOWN  &mt PAGE_UP UP  &mt LG(RIGHT) RIGHT  &trans  &trans
&trans  &trans     &trans     &trans         &trans      &h_split    &get_qoute         &kp LS(LA(B))       &kp LC(C)       &kp LS(LA(S))        &trans  &trans
                              &trans         &trans      &trans      &trans             &trans              &trans
            >;

            label = "Arrows";
        };

        Numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp PERCENT    &kp CARET    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE           &kp PLUS    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK  &none
&none  &kp HASH       &kp AT_SIGN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp ASTERISK       &kp MINUS   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH     &none
&none  &kp AMPERSAND  &kp DOLLAR   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EXCLAMATION    &kp PERIOD  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL     &trans
                                   &trans                &trans                 &trans             &trans      &kp NUMBER_0  &trans
            >;

            label = "Numbers";
        };

        WindowMovement {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &kp LA(NUMBER_7)  &kp LA(N8)        &kp LA(NUMBER_9)  &trans  &trans
&trans  &trans  &trans  &trans  &kp LA(F)  &kp LA(M)    &trans  &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &kp LA(NUMBER_4)  &kp LA(N5)        &kp LA(NUMBER_6)  &trans  &trans
                        &trans  &trans     &trans       &trans  &trans            &trans
            >;
        };

        BT {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans        &trans        &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR        &trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR_ALL    &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans
                        &trans  &trans  &trans            &trans  &trans        &trans
            >;

            label = "BT";
        };
    };
};
